{"version":3,"sources":["components/CreateExcersise.js","components/Appbar.js","components/Modal.js","components/EditExcercise.js","components/ExcersieList.js","components/login.js","components/SignUp.js","Pages/Dashboard.js","Pages/LandingPage.js","Pages/App.js","index.js"],"names":["CreateExcersise","setIsModalOpen","history","useHistory","useState","name","setUserName","description","setDescription","duration","fitnessGoals","setFitnessGoals","startDate","setStartDate","endDate","setEndDate","createExcersise","e","a","preventDefault","fetch","method","headers","localStorage","getItem","body","JSON","stringify","response","json","push","window","location","reload","dateEnd","Date","console","log","getDuration","onSubmit","class","for","type","id","value","required","onChange","target","Appbar","setModalData","logOut","data","setItem","user","href","className","onClick","Modal","isModalOpen","modalData","EditExcersise","names","descriptions","startDates","endDates","fitnessGoales","completed","setCompleted","editItem","checked","ExcersieList","setData","deleteItem","status","excercise","fetchData","useEffect","token","jwt","decode","removeItem","replace","getIncompleteGoals","bol","length","filter","one","map","single","_id","email","moment","format","EditExcercise","startTimes","endTimes","navigator","clipboard","writeText","Login","setEmail","password","setPassword","loginUser","event","alert","aria-describedby","SignUp","setName","registerUser","Dashboard","LandingPage","to","App","path","exact","component","Excercise","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dee52956.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst CreateExcersise = ({ setIsModalOpen }) => {\r\n  const history = useHistory();\r\n  const [name, setUserName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n\r\n  const [fitnessGoals, setFitnessGoals] = useState(\"\");\r\n\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const createExcersise = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(\r\n      \"http://localhost:5000/exercises/create\",\r\n\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          description,\r\n          startDate,\r\n          endDate,\r\n          fitnessGoals,\r\n        }),\r\n      }\r\n    );\r\n\r\n    const data = await response.json();\r\n    setIsModalOpen(false);\r\n\r\n    history.push(\"/Dashboard\");\r\n    window.location.reload();\r\n  };\r\n\r\n  const getDuration = () => {\r\n    const dateEnd = new Date(endDate);\r\n    const dateStart = new Date(startDate);\r\n    console.log(dateEnd);\r\n  };\r\n  getDuration();\r\n\r\n  return (\r\n    <form onSubmit={createExcersise}>\r\n      <div class=\"mb-3\">\r\n        {duration}\r\n        {}\r\n        <label for=\"exampleInputEmail1\" class=\"form-label\">\r\n          Training Goals\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"exampleInputEmail1\"\r\n          value={name}\r\n          required=\"true\"\r\n          onChange={(e) => setUserName(e.target.value)}\r\n        />\r\n        <div id=\"emailHelp\" class=\"form-text\">\r\n          set a name for your weekly scchdele\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"exampleInputPassword1\" class=\"form-label\">\r\n          Description\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"exampleInputPassword1\"\r\n          value={description}\r\n          required=\"true\"\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"exampleInputPassword1\" class=\"\">\r\n          Fitness Goals\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"exampleInputPassword1\"\r\n          value={fitnessGoals}\r\n          required=\"true\"\r\n          onChange={(e) => setFitnessGoals(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"date\">\r\n        <label for=\"exampleInputPassword1\" class=\"form-label\">\r\n          StartDate\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          class=\"form-control\"\r\n          id=\"exampleInputPassword1\"\r\n          value={startDate}\r\n          required=\"true\"\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"date\">\r\n        <label for=\"exampleInputPassword1\" class=\"form-label\">\r\n          EndDate\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          class=\"form-control\"\r\n          id=\"exampleInputPassword1\"\r\n          value={endDate}\r\n          required=\"true\"\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary m-3\">\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateExcersise;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateExcersise from \"./CreateExcersise\";\r\nconst Appbar = ({ setModalData, setIsModalOpen }) => {\r\n  const logOut = async () => {\r\n    const response = await fetch(\"http://localhost:5000/logout\");\r\n    const data = await response.json();\r\n    console.log(data);\r\n    localStorage.setItem(\"token\", data.user);\r\n    window.location.href = \"/\";\r\n    // if (data.user) {\r\n    //   alert(\"login successfull\");\r\n    //   localStorage.setItem(\"token\", data.user);\r\n    //   window.location.href = \"/Dashboard \";\r\n    // } else {\r\n    //   alert(\"please check your username and password\");\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <h1>Activity Planner</h1>\r\n\r\n        <div>\r\n          <a\r\n            className=\"btn btn-outline-primary\"\r\n            onClick={() => {\r\n              setIsModalOpen(true);\r\n              setModalData(<CreateExcersise setIsModalOpen={setIsModalOpen} />);\r\n            }}>\r\n            + add\r\n          </a>\r\n          <a onClick={() => logOut()} className=\"btn btn-outline-secondary\">\r\n            log out\r\n          </a>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import React, { useState } from \"react\";\nimport \"../styles/modal.css\";\n\nconst Modal = ({ isModalOpen, setIsModalOpen, modalData }) => {\n  return (\n    <div className={isModalOpen ? \"modal-main\" : \"\"}>\n      <div className={`modal-container ${isModalOpen ? \"modal-scale\" : \"\"}`}>\n        <div\n          className=\"cancel-modal\"\n          onClick={() => {\n            setIsModalOpen(false);\n          }}>\n          <i class=\"bi bi-x-diamond\">x</i>\n        </div>\n\n        <div className=\"content-modal container\">\n          <div className=\"row\">\n            <div className=\"col-sm-12\">{modalData}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useParams } from \"react-router\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst EditExcersise = ({\r\n  setIsModalOpen,\r\n  id,\r\n  names,\r\n  descriptions,\r\n  startDates,\r\n  endDates,\r\n  fitnessGoales,\r\n}) => {\r\n  const history = useHistory();\r\n  const [name, setUserName] = useState(names);\r\n  const [description, setDescription] = useState(descriptions);\r\n  const [duration, setDuration] = useState(\"\");\r\n\r\n  const [fitnessGoals, setFitnessGoals] = useState(fitnessGoales);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [startDate, setStartDate] = useState(startDates);\r\n  const [endDate, setEndDate] = useState(endDates);\r\n\r\n  const editItem = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\r\n      `http://localhost:5000/exercises/update/${id}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          description,\r\n          completed,\r\n          endDate,\r\n          fitnessGoals,\r\n        }),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    setIsModalOpen(false);\r\n\r\n    history.push(\"/Dashboard\");\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={editItem}>\r\n      <div class=\"mb-3\">\r\n        {duration}\r\n        {}\r\n        <label for=\"exampleInputEmail1\" class=\"form-label\">\r\n          Training Goals\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"exampleInputEmail1\"\r\n          value={name}\r\n          required=\"true\"\r\n          onChange={(e) => setUserName(e.target.value)}\r\n        />\r\n        <div id=\"emailHelp\" class=\"form-text\">\r\n          set a name for your weekly scchdele\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"exampleInputPassword1\" class=\"form-label\">\r\n          Description\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"exampleInputPassword1\"\r\n          value={description}\r\n          required=\"true\"\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"exampleInputPassword1\" class=\"\">\r\n          Fitness Goals\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"exampleInputPassword1\"\r\n          value={fitnessGoals}\r\n          required=\"true\"\r\n          onChange={(e) => setFitnessGoals(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label for=\"exampleInputPassword1\" class=\"form-label\">\r\n          have you completed this goal\r\n        </label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"exampleInputPassword1\"\r\n          checked={completed}\r\n          required=\"true\"\r\n          onChange={(e) => setCompleted(e.target.checked)}\r\n        />\r\n      </div>\r\n      <div class=\"date\">\r\n        <label for=\"exampleInputPassword1\" class=\"form-label\">\r\n          EndDate\r\n        </label>\r\n        <input\r\n          type=\"date\"\r\n          class=\"form-control\"\r\n          id=\"exampleInputPassword1\"\r\n          value={endDates}\r\n          required=\"true\"\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary m-3\">\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditExcersise;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Appbar from \"./Appbar\";\r\nimport Modal from \"./Modal\";\r\nimport EditExcercise from \"./EditExcercise\";\r\nimport moment from \"moment\";\r\nconst ExcersieList = ({ description }) => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [incomplet, setIncomplete] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalData, setModalData] = useState(\"\");\r\n  const deleteItem = async (id) => {\r\n    const response = await fetch(`http://localhost:5000/exercises/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    if (data.status == \"ok\") {\r\n      const fetchData = async () => {\r\n        const response = await fetch(\r\n          \"http://localhost:5000/exercises\",\r\n\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"x-access-token\": localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n\r\n        const excercise = await response.json();\r\n        setData([excercise]);\r\n        return excercise;\r\n      };\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        history.replace(\"/login\");\r\n      } else {\r\n        const fetchData = async () => {\r\n          const response = await fetch(\r\n            \"http://localhost:5000/exercises\",\r\n\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"x-access-token\": localStorage.getItem(\"token\"),\r\n              },\r\n            }\r\n          );\r\n\r\n          const excercise = await response.json();\r\n          console.log(excercise);\r\n          setData([excercise]);\r\n          return excercise;\r\n        };\r\n\r\n        fetchData();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const getIncompleteGoals = (bol) => {\r\n    if (data.length >= 1) {\r\n      let a = data[0].filter((one) => one.completed == bol);\r\n      console.log(a);\r\n      setData([a]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getIncompleteGoals(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Appbar setIsModalOpen={setIsModalOpen} setModalData={setModalData} />\r\n\r\n        <h3> Fitness Goals For the week</h3>\r\n      </div>\r\n      {data.map((single) => {\r\n        console.log(single);\r\n        if (single) {\r\n          return (\r\n            <h1>\r\n              {single.length < 1\r\n                ? \"no fitness  goals for the week \"\r\n                : single.map((one) => {\r\n                    const {\r\n                      _id,\r\n                      email,\r\n                      description,\r\n                      name,\r\n                      startDate,\r\n                      endDate,\r\n                      fitnessGoals,\r\n                      completed,\r\n                    } = one;\r\n\r\n                    let date = new Date();\r\n\r\n                    return (\r\n                      <div>\r\n                        <p>\r\n                          {moment(startDate, \"x\").format(\"DD MMM YYYY  \")} to{\" \"}\r\n                          {moment(endDate, \"x\").format(\"DD MMM YYYY  \")}{\" \"}\r\n                        </p>\r\n                        <p> {name}</p>\r\n                        <p> {description}</p>\r\n                        <p> {fitnessGoals}</p>\r\n                        <p>\r\n                          {completed\r\n                            ? \"completed Achievement\"\r\n                            : \"Achievement not reached\"}\r\n                        </p>\r\n                        <button\r\n                          className=\"btn btn-outline-primary\"\r\n                          onClick={() => {\r\n                            deleteItem(one._id);\r\n                          }}>\r\n                          deletex\r\n                        </button>\r\n\r\n                        <button\r\n                          className=\"btn btn-outline-primary\"\r\n                          onClick={() => {\r\n                            setModalData(\r\n                              <EditExcercise\r\n                                setIsModalOpen={setIsModalOpen}\r\n                                id={_id}\r\n                                names={name}\r\n                                descriptions={description}\r\n                                startTimes={startDate}\r\n                                endTimes={endDate}\r\n                                fitnessGoales={fitnessGoals}\r\n                              />\r\n                            );\r\n                            setIsModalOpen(true);\r\n                          }}>\r\n                          edit\r\n                        </button>\r\n                      </div>\r\n                    );\r\n                  })}\r\n            </h1>\r\n          );\r\n        }\r\n      })}\r\n      <button\r\n        className=\"btn btn-outline-primary\"\r\n        onClick={() => {\r\n          getIncompleteGoals(false);\r\n        }}>\r\n        show incomplete training goals\r\n      </button>\r\n      <button\r\n        className=\"btn btn-outline-primary\"\r\n        onClick={() => {\r\n          navigator.clipboard.writeText(\r\n            \"http:localhost:5000/excercise/weekly/share\"\r\n          );\r\n          getIncompleteGoals(false);\r\n        }}>\r\n        Share link\r\n      </button>\r\n      {isModalOpen ? (\r\n        <Modal\r\n          setIsModalOpen={setIsModalOpen}\r\n          isModalOpen={isModalOpen}\r\n          modalData={modalData}\r\n          setModalData={setIsModalOpen}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcersieList;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const loginUser = async (event) => {\r\n    event.preventDefault();\r\n    const response = await fetch(\r\n      \"http://localhost:5000/api/login\",\r\n\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email,\r\n          password,\r\n        }),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    if (data.user) {\r\n      alert(\"login successfull\");\r\n      localStorage.setItem(\"token\", data.user);\r\n      window.location.href = \"/Dashboard \";\r\n    } else {\r\n      alert(\"please check your username and password\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-primary\">Login to your account</h1>\r\n      <form onSubmit={loginUser}>\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputEmail1\" class=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            value={email}\r\n            required=\"true\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <div id=\"emailHelp\" class=\"form-text\">\r\n            We'll never share your email with anyone else.\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputPassword1\" class=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            value={password}\r\n            required=\"true\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const registerUser = async (event) => {\r\n    event.preventDefault();\r\n    const response = await fetch(\r\n      \"http://localhost:5000/api/signUp\",\r\n\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          email,\r\n          password,\r\n        }),\r\n      }\r\n    );\r\n    console.log(\"reponse\");\r\n    const data = await response.json();\r\n\r\n    if (data.status === \"ok\") {\r\n      history.push(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>SignUp</h1>\r\n      <form onSubmit={registerUser}>\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputEmail1\" class=\"form-label\">\r\n            Username\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            value={name}\r\n            required=\"true\"\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <div id=\"emailHelp\" class=\"form-text\">\r\n            {/* {\"username taken\"} */}\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputEmail1\" class=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            value={email}\r\n            required=\"true\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <div id=\"emailHelp\" class=\"form-text\">\r\n            {/* {\"email taken  please login if its yours\"} */}\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"exampleInputPassword1\" class=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            value={password}\r\n            required=\"true\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ExcersieList from \"../components/ExcersieList\";\r\nconst Dashboard = () => {\r\n  // async function updateQuote(event) {\r\n  //   event.preventDefault();\r\n\r\n  //   const req = await fetch(\"http://localhost:5000/api/activity\", {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //       \"x-access-token\": localStorage.getItem(\"token\"),\r\n  //     },\r\n  //     body: JSON.stringify({\r\n  //       quote: tempQuote,\r\n  //     }),\r\n  //   });\r\n\r\n  //   const data = await req.json();\r\n  //   if (data.status === \"ok\") {\r\n  //     setQuote(tempQuote);\r\n  //     setTempQuote(\"\");\r\n  //   } else {\r\n  //     alert(data.error);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <ExcersieList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Landingpage.css\";\r\n\r\n//landing page\r\nconst LandingPage = () => {\r\n  return (\r\n    <div className=\"landing-container  row justify-content-center\">\r\n      <div className=\"content-landing col-md-8\">\r\n        <h1>Excersice Activity Planner</h1>\r\n        <p>\r\n          {\" \"}\r\n          As covid-19 is takinga toll on the world never forget to keep healthy\r\n          with our Activity Planner Application\r\n        </p>\r\n        <div className=\"features\">\r\n          <p>\r\n            {\" \"}\r\n            create , Track and share your weekly excercise plans and training\r\n            goals{\" \"}\r\n          </p>\r\n        </div>\r\n        <div className=\"login\">\r\n          <div className=\"contain-btn\">\r\n            <div className=\"btn custom\">\r\n              <Link to=\"/login\">Login</Link>{\" \"}\r\n            </div>\r\n            <div className=\"btn custom\">\r\n              <Link to=\"/signUp\">signUp</Link>{\" \"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"landing-image col-md-4 \">\r\n        {/* <img src={Image}>\r\n          \r\n          </img>  */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Excercise from \"../components/ExcersieList\";\r\nimport CreateExcersise from \"../components/CreateExcersise\";\r\nimport EditExcersise from \"../components/EditExcercise\";\r\nimport Login from \"../components/login\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport SignUp from \"../components/SignUp\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport LandingPage from \"./LandingPage\";\r\n\r\nconst App = () => {\r\n  //App container\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={LandingPage} />\r\n          <Route path=\"/Excercice\" exact component={Excercise} />\r\n          <Route path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/signUp\" exact component={SignUp} />\r\n          <Route path=\"/Dashboard\" exact component={Dashboard} />\r\n          <Route path=\"/\" exact component={Excercise} />\r\n\r\n          <Route path=\"/edit/:id\" component={EditExcersise} />\r\n          <Route path=\"/create\" component={CreateExcersise} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/main.css\";\nimport \"./styles/navbar.css\";\n\nimport App from \"./Pages/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}